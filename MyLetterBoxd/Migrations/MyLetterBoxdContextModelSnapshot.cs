// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyLetterBoxd.Database;

#nullable disable

namespace MyLetterBoxd.Migrations
{
    [DbContext(typeof(MyLetterBoxdContext))]
    partial class MyLetterBoxdContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("MyLetterBoxd.Models.Cast", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Character")
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Casts");
                });

            modelBuilder.Entity("MyLetterBoxd.Models.CastEntertainment", b =>
                {
                    b.Property<int>("CastID")
                        .HasColumnType("int");

                    b.Property<int>("EntertainmentID")
                        .HasColumnType("int");

                    b.HasKey("CastID", "EntertainmentID");

                    b.HasIndex("EntertainmentID");

                    b.ToTable("CastEntertainments");
                });

            modelBuilder.Entity("MyLetterBoxd.Models.Entertainment", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("EntertainmentType")
                        .HasColumnType("int");

                    b.Property<double>("Rating")
                        .HasColumnType("double");

                    b.Property<string>("ReleaseDate")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Entertainments", (string)null);

                    b.HasDiscriminator<int>("EntertainmentType");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("MyLetterBoxd.Models.Genre", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("MyLetterBoxd.Models.GenreEntertainment", b =>
                {
                    b.Property<int>("GenreID")
                        .HasColumnType("int");

                    b.Property<int>("EntertainmentID")
                        .HasColumnType("int");

                    b.HasKey("GenreID", "EntertainmentID");

                    b.HasIndex("EntertainmentID");

                    b.ToTable("GenreEntertainments");
                });

            modelBuilder.Entity("MyLetterBoxd.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("MyLetterBoxd.Models.UserEntertainment", b =>
                {
                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("EntertainmentID")
                        .HasColumnType("int");

                    b.HasKey("UserID", "EntertainmentID");

                    b.HasIndex("EntertainmentID");

                    b.ToTable("UserEntertainments");
                });

            modelBuilder.Entity("MyLetterBoxd.Models.Film", b =>
                {
                    b.HasBaseType("MyLetterBoxd.Models.Entertainment");

                    b.HasDiscriminator().HasValue(1);
                });

            modelBuilder.Entity("MyLetterBoxd.Models.Serie", b =>
                {
                    b.HasBaseType("MyLetterBoxd.Models.Entertainment");

                    b.Property<int>("Seasons")
                        .HasColumnType("int");

                    b.HasDiscriminator().HasValue(2);
                });

            modelBuilder.Entity("MyLetterBoxd.Models.CastEntertainment", b =>
                {
                    b.HasOne("MyLetterBoxd.Models.Cast", "Cast")
                        .WithMany("CastEntertainments")
                        .HasForeignKey("CastID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyLetterBoxd.Models.Entertainment", "Entertainment")
                        .WithMany("CastEntertainments")
                        .HasForeignKey("EntertainmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cast");

                    b.Navigation("Entertainment");
                });

            modelBuilder.Entity("MyLetterBoxd.Models.GenreEntertainment", b =>
                {
                    b.HasOne("MyLetterBoxd.Models.Entertainment", "Entertainment")
                        .WithMany("GenreEntertainments")
                        .HasForeignKey("EntertainmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyLetterBoxd.Models.Genre", "Genre")
                        .WithMany("GenreEntertainments")
                        .HasForeignKey("GenreID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entertainment");

                    b.Navigation("Genre");
                });

            modelBuilder.Entity("MyLetterBoxd.Models.UserEntertainment", b =>
                {
                    b.HasOne("MyLetterBoxd.Models.Entertainment", "Entertainment")
                        .WithMany("UserEntertainments")
                        .HasForeignKey("EntertainmentID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MyLetterBoxd.Models.User", "User")
                        .WithMany("UserEntertainments")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Entertainment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("MyLetterBoxd.Models.Cast", b =>
                {
                    b.Navigation("CastEntertainments");
                });

            modelBuilder.Entity("MyLetterBoxd.Models.Entertainment", b =>
                {
                    b.Navigation("CastEntertainments");

                    b.Navigation("GenreEntertainments");

                    b.Navigation("UserEntertainments");
                });

            modelBuilder.Entity("MyLetterBoxd.Models.Genre", b =>
                {
                    b.Navigation("GenreEntertainments");
                });

            modelBuilder.Entity("MyLetterBoxd.Models.User", b =>
                {
                    b.Navigation("UserEntertainments");
                });
#pragma warning restore 612, 618
        }
    }
}
